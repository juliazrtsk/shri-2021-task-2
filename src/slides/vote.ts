import { Story, User as SlideUser } from 'src/types/slides';
import { User, UserId } from 'src/types/entities';
import { mapUsersToValuesForSlide } from 'src/users/users';

function transformValue(value: number): string {
  switch (value % 100) {
    case 11:
    case 12:
    case 13:
    case 14:
      return `${value} –≥–æ–ª–æ—Å–æ–≤`;
    default:
      break;
  }
  switch (value % 10) {
    case 1:
      return `${value} –≥–æ–ª–æ—Å`;
    case 2:
    case 3:
    case 4:
      return `${value} –≥–æ–ª–æ—Å–∞`;
    default:
      return `${value} –≥–æ–ª–æ—Å–æ–≤`;
  }
}

/* Todo: —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —ç—Ç–∞ —à—Ç—É–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ —Ç–æ–ª—å–∫–æ VoteData? */
export function toVote(
  users: Map<UserId, User>,
  usersLikesMap: Map<UserId, number>
): Story {
  const slideUsers: SlideUser[] = mapUsersToValuesForSlide(
    users,
    usersLikesMap,
    transformValue
  );
  return {
    alias: 'vote',
    data: {
      title: '–°–∞–º—ã–π üîé –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      subtitle: '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞–≥–æ–Ω', // Todo: —ç—Ç–æ –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø—Ä–∏–Ω—Ç–∞
      emoji: 'üîé',
      users: slideUsers,
    },
  };
}
